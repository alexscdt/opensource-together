openapi: 3.0.4
info:
  title: OpenSource Together API
  description: |
    Documentation de l'API pour la plateforme OpenSource Together.

    ## Authentification

    L'API utilise SuperTokens avec l'authentification GitHub OAuth.


    TEST TEST TEST
    ### Pour les d√©veloppeurs Frontend

    **Processus de connexion :**
    1. Rediriger vers `/auth/authorize/github` pour initier la connexion
    2. L'utilisateur est redirig√© vers GitHub pour autoriser l'application
    3. GitHub redirige vers `/auth/callback/github` avec le code d'autorisation
    4. Les cookies de session sont automatiquement d√©finis
    5. Utiliser `/auth/session` pour r√©cup√©rer les infos utilisateur (√©quivalent `/me`)

    **Cookies de session :**
    - `sAccessToken` : Token d'acc√®s principal
    - `sRefreshToken` : Token de rafra√Æchissement
    - Ces cookies sont automatiquement g√©r√©s par le navigateur

    **Routes prot√©g√©es :**
    Les routes n√©cessitant une authentification sont marqu√©es avec le symbole üîí.

    **Base URL :** `http://localhost:4000`
  version: 1.0.0
servers:
  - url: http://localhost:4000
tags:
  - name: Projects
    description: Op√©rations li√©es aux projets open source
  - name: Authentication
    description: Op√©rations li√©es √† l'authentification utilisateur
paths:
  /profile/me:
    get:
      tags:
        - Profile
      summary: R√©cup√©rer le profil de l'utilisateur courant
      description: Retourne le profil de l'utilisateur actuellement authentifi√©.
      security:
        - supertokens_session: []
      responses:
        '200':
          description: Profil utilisateur retourn√© avec succ√®s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponseDto'
              example:
                id: '43a39f90-1718-470d-bcef-c7ebeb972c0d'
                name: 'Jhondoe'
                avatarUrl: 'https://avatars.githubusercontent.com/u/45101981?v=4'
                bio: "Fullstack Developer | \r\nExpress & React | \r\nBuilding @jhongo-project "
                location: 'Paris, France'
                company: 'Jhongo'
                socialLinks:
                  - type: 'github'
                    url: 'https://github.com/Jhondoe'
                  - type: 'twitter'
                    url: 'https://twitter.com/Jhondoe'
                  - type: 'linkedin'
                    url: 'https://www.linkedin.com/in/jhondoe/'
                  - type: 'website'
                    url: 'https://jhondoe.com'
                skills: []
                experiences: []
                joinedAt: '2025-04-16T15:47:31.633Z'
                profileUpdatedAt: '2025-04-16T15:47:31.633Z'
        '404':
          description: Utilisateur non trouv√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
                  error:
                    type: string
                    example: Not Found
                  statusCode:
                    type: integer
                    example: 404
              example:
                message: 'Utilisateur non trouv√©.'
                error: 'Not Found'
                statusCode: 404
  /projects:
    get:
      tags:
        - Projects
      summary: R√©cup√©rer tous les projets
      operationId: getProjects
      description: |
        R√©cup√®re la liste compl√®te de tous les projets disponibles sur la plateforme.
        Aucune authentification requise - endpoint public.
      responses:
        '200':
          description: Liste de tous les projets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponseDto'
              example:
                - id: '123e4567-e89b-12d3-a456-426614174000'
                  title: 'Plateforme E-commerce React'
                  description: 'Une application e-commerce moderne construite avec React et Node.js'
                  link: 'https://github.com/user/ecommerce-platform'
                  ownerId: 'github_user123'
                  techStacks:
                    - id: 'react'
                      name: 'React'
                      iconUrl: 'https://reactjs.org/logo.svg'
                    - id: 'nodejs'
                      name: 'Node.js'
                      iconUrl: 'https://nodejs.org/logo.svg'
        '500':
          description: Erreur serveur lors de la r√©cup√©ration des projets
    post:
      tags:
        - Projects
      summary: Cr√©er un nouveau projet
      operationId: createProject
      description: |
        Cr√©e un nouveau projet sur la plateforme.
        N√©cessite une authentification GitHub valide.
        L'utilisateur connect√© devient automatiquement le propri√©taire du projet.
      security:
        - supertokens_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectDtoInput'
            example:
              title: 'Mon Nouveau Projet Open Source'
              description: 'Description d√©taill√©e de mon projet innovant'
              difficulty: 'MEDIUM'
              link: 'https://example.com/my-project'
              githubLink: 'https://github.com/user/my-project'
              techStacks:
                - id: 'react'
                - id: 'typescript'
              projectRoles:
                - roleTitle: 'Frontend Developer'
                  description: 'D√©veloppeur React exp√©riment√©'
                  skillSet:
                    - id: 'react'
                  isFilled: false
              projectMembers:
                [
                  { 'userId': '9b4d1ac3-a5ca-4d97-988f-3924e52314e7' },
                  { 'userId': '9b4d1ac3-a5ca-4d97-988f-3924e52314e7' },
                ]
      responses:
        '200':
          description: Projet cr√©√© avec succ√®s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '400':
          description: Erreur lors de la cr√©ation du projet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur du syst√®me de validation ou de cr√©ation
                    oneOf:
                      - example: 'Le titre du projet est requis'
                      - example: 'La description du projet doit comporter au minimum 10 caracteres'
                      - example: 'Project already exists'
                      - example: 'Related record not found (e.g., invalid user or tech stack)'
                      - example: 'Required record not found during creation (e.g., TechStack)'
                  statusCode:
                    type: integer
                    example: 400
        '401':
          description: Non authentifi√© - session requise
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'unauthorised'
                  statusCode:
                    type: integer
                    example: 401
  /projects/search:
    get:
      tags:
        - Projects
      summary: Rechercher des projets avec filtres multiples
      operationId: getProjectsFiltered
      description: |
        Recherche de projets avec filtres optionnels combinables :
        - Par titre (recherche insensible √† la casse)
        - Par difficult√© (EASY, MEDIUM, HARD)
        - Par r√¥les recherch√©s (frontend, backend, designer, etc.)
        - Par technologies utilis√©es (React, Vue, TypeScript, etc.)
        - Tri par date de cr√©ation
      parameters:
        - name: title
          in: query
          description: Titre du projet √† rechercher (recherche partielle)
          required: false
          schema:
            type: string
          example: 'React'
        - name: difficulty
          in: query
          description: Niveau de difficult√© du projet
          required: false
          schema:
            type: string
            enum: [EASY, MEDIUM, HARD]
          example: 'EASY'
        - name: roles
          in: query
          description: R√¥les recherch√©s dans le projet (s√©par√©s par des virgules)
          required: false
          schema:
            type: string
          example: 'frontend,backend'
        - name: techStacks
          in: query
          description: Technologies utilis√©es dans le projet (s√©par√©es par des virgules)
          required: false
          schema:
            type: string
          example: 'react,typescript,nodejs'
        - name: sortOrder
          in: query
          description: Ordre de tri par date de cr√©ation
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          example: 'desc'
      responses:
        '200':
          description: Liste de projets correspondant aux crit√®res de filtrage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponseDto'
              examples:
                with_results:
                  summary: R√©sultats trouv√©s
                  value:
                    - id: '123e4567-e89b-12d3-a456-426614174000'
                      title: 'Plateforme React E-commerce'
                      description: 'Application e-commerce moderne avec React et TypeScript'
                      difficulty: 'MEDIUM'
                      link: 'https://github.com/user/react-ecommerce'
                      ownerId: 'user123'
                      techStacks:
                        - id: 'react'
                          name: 'React'
                          iconUrl: 'https://reactjs.org/logo.svg'
                        - id: 'typescript'
                          name: 'TypeScript'
                          iconUrl: 'https://www.typescriptlang.org/logo.png'
                empty_results:
                  summary: Aucun r√©sultat
                  value: []
        '400':
          description: Erreur lors de la recherche de projets
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur du syst√®me (provient du repository ou des handlers)
                    example: 'Unknown error : Database connection failed'
                  statusCode:
                    type: integer
                    example: 400
  /projects/{id}:
    get:
      tags:
        - Projects
      summary: R√©cup√©rer un projet par ID
      operationId: getProjectById
      parameters:
        - name: id
          in: path
          description: ID du projet √† r√©cup√©rer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: D√©tails du projet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '404':
          description: Projet non trouv√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Project not found'
                  statusCode:
                    type: integer
                    example: 404
    patch:
      tags:
        - Projects
      summary: Mettre √† jour un projet existant
      operationId: updateProject
      security:
        - supertokens_session: []
      parameters:
        - name: id
          in: path
          description: ID du projet √† mettre √† jour
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDtoRequest'
      responses:
        '200':
          description: Projet mis √† jour avec succ√®s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '400':
          description: Erreur lors de la mise √† jour du projet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur sp√©cifique (validation, autorisation, etc.)
                    oneOf:
                      - example: 'Le titre du projet est requis'
                      - example: 'La description du projet doit comporter au minimum 10 caracteres'
                      - example: 'Project not found'
                  statusCode:
                    type: integer
                    example: 400
        '401':
          description: Non authentifi√© - session requise
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'unauthorised'
                  statusCode:
                    type: integer
                    example: 401
        '404':
          description: Projet non trouv√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Project not found'
                  statusCode:
                    type: integer
                    example: 404
    delete:
      tags:
        - Projects
      summary: üóëÔ∏è Supprimer un projet par ID
      operationId: deleteProject
      description: |
        Supprime d√©finitivement un projet de la plateforme.

        **üîí Restriction de s√©curit√© :**
        - Seul le propri√©taire (cr√©ateur) du projet peut le supprimer
        - V√©rification automatique de propri√©t√© c√¥t√© serveur

        **‚ö†Ô∏è Action irr√©versible :**
        Cette action supprime d√©finitivement le projet et toutes ses donn√©es associ√©es.
      security:
        - supertokens_session: []
      parameters:
        - name: id
          in: path
          description: ID unique du projet √† supprimer
          required: true
          schema:
            type: string
            example: '123e4567-e89b-12d3-a456-426614174000'
      responses:
        '200':
          description: Projet supprim√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Project deleted successfully'
        '401':
          description: Non authentifi√© - session requise
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'unauthorised'
                  statusCode:
                    type: integer
                    example: 401
        '403':
          description: Acc√®s interdit - vous n'√™tes pas le propri√©taire de ce projet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'You are not allowed to delete this project'
                  statusCode:
                    type: integer
                    example: 403
        '404':
          description: Projet non trouv√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Project not found'
                  statusCode:
                    type: integer
                    example: 404
        '400':
          description: Erreur lors de la suppression du projet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur technique lors de la suppression
                    example: 'Unknown error during project deletion: Database constraint violation'
                  statusCode:
                    type: integer
                    example: 400
  /projects/{id}/roles:
    post:
      tags:
        - Projects
      summary: Cr√©er un nouveau r√¥le de projet
      operationId: createProjectRole
      description: |
        Cr√©e un nouveau r√¥le pour un projet existant.
        N√©cessite d'√™tre le propri√©taire du projet.
      security:
        - supertokens_session: []
      parameters:
        - name: id
          in: path
          description: ID du projet dans lequel cr√©er le r√¥le
          required: true
          schema:
            type: string
            example: '123e4567-e89b-12d3-a456-426614174000'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRoleDto'
            example:
              roleTitle: 'Frontend Developer'
              description: 'D√©veloppeur React exp√©riment√©'
              isFilled: false
              skillSet:
                - id: 'react'
                - id: 'typescript'
      responses:
        '200':
          description: R√¥le de projet cr√©√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Project role created successfully'
                  role:
                    $ref: '#/components/schemas/ProjectRoleResponseDto'
        '400':
          description: Erreur lors de la cr√©ation du r√¥le
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur sp√©cifique
                    oneOf:
                      - example: 'Le titre du r√¥le est requis'
                      - example: 'Project role already exists'
                      - example: 'Related record not found (e.g., invalid skill)'
                      - example: 'One or more techStacks do not exist: tech1, tech2'
                  statusCode:
                    type: integer
                    example: 400
        '401':
          description: Non authentifi√© - session requise
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'unauthorised'
                  statusCode:
                    type: integer
                    example: 401
        '403':
          description: Acc√®s interdit - vous n'√™tes pas le propri√©taire de ce projet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'You are not allowed to add roles to this project'
                  statusCode:
                    type: integer
                    example: 403
        '404':
          description: Projet non trouv√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Project not found'
                  statusCode:
                    type: integer
                    example: 404
  /projects/{id}/roles/{roleId}:
    patch:
      tags:
        - Projects
      summary: Mettre √† jour un r√¥le de projet existant
      operationId: updateProjectRole
      description: |
        Met √† jour les informations d'un r√¥le sp√©cifique dans un projet.

        **üîí S√©curit√© :**
        - Seul le propri√©taire du projet peut modifier les r√¥les
        - V√©rification automatique de propri√©t√© c√¥t√© serveur

        **‚úèÔ∏è Modifications possibles :**
        - Titre du r√¥le
        - Description
        - Statut (pourvu ou non)
        - Comp√©tences techniques requises
      security:
        - supertokens_session: []
      parameters:
        - name: id
          in: path
          description: ID du projet contenant le r√¥le
          required: true
          schema:
            type: string
            example: '123e4567-e89b-12d3-a456-426614174000'
        - name: roleId
          in: path
          description: ID du r√¥le √† mettre √† jour
          required: true
          schema:
            type: string
            example: '789e4567-e89b-12d3-a456-426614174111'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRoleDto'
            example:
              roleTitle: 'Senior Frontend Developer'
              description: 'D√©veloppeur React exp√©riment√© avec expertise en TypeScript'
              isFilled: true
              skillSet:
                - id: 'react'
                - id: 'typescript'
      responses:
        '200':
          description: R√¥le de projet mis √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Project role updated successfully'
        '400':
          description: Erreur lors de la mise √† jour du r√¥le
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur sp√©cifique (validation, autorisation, etc.)
                    oneOf:
                      - example: 'Le titre du r√¥le est requis'
                      - example: 'La description du r√¥le doit comporter au minimum 10 caract√®res'
                  statusCode:
                    type: integer
                    example: 400
        '401':
          description: Non authentifi√© - session requise
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'unauthorised'
                  statusCode:
                    type: integer
                    example: 401
        '403':
          description: Acc√®s interdit - vous n'√™tes pas le propri√©taire de ce projet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'You are not allowed to update this project role'
                  statusCode:
                    type: integer
                    example: 403
        '404':
          description: Projet ou r√¥le non trouv√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    oneOf:
                      - example: 'Project not found'
                      - example: 'Role not found in this project'
                  statusCode:
                    type: integer
                    example: 404
    delete:
      tags:
        - Projects
      summary: Supprimer un r√¥le de projet
      operationId: deleteProjectRole
      description: |
        Supprime un r√¥le sp√©cifique d'un projet.

        **üîí S√©curit√© :**
        - Seul le propri√©taire du projet peut supprimer des r√¥les
        - V√©rification automatique de propri√©t√© c√¥t√© serveur

        **‚ö†Ô∏è Action irr√©versible :**
        Cette action supprime d√©finitivement le r√¥le et ses associations.
      security:
        - supertokens_session: []
      parameters:
        - name: id
          in: path
          description: ID du projet contenant le r√¥le
          required: true
          schema:
            type: string
            example: '123e4567-e89b-12d3-a456-426614174000'
        - name: roleId
          in: path
          description: ID du r√¥le √† supprimer
          required: true
          schema:
            type: string
            example: '789e4567-e89b-12d3-a456-426614174111'
      responses:
        '200':
          description: R√¥le de projet supprim√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Project role deleted successfully'
        '400':
          description: Erreur lors de la suppression du r√¥le
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message d'erreur technique lors de la suppression
                    oneOf:
                      - example: 'Unknown error during role deletion'
                      - example: 'Cannot delete role: it may still be referenced elsewhere'
                  statusCode:
                    type: integer
                    example: 400
        '401':
          description: Non authentifi√© - session requise
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'unauthorised'
                  statusCode:
                    type: integer
                    example: 401
        '403':
          description: Acc√®s interdit - vous n'√™tes pas le propri√©taire de ce projet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'You are not allowed to delete roles from this project'
                  statusCode:
                    type: integer
                    example: 403
        '404':
          description: Projet ou r√¥le non trouv√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    oneOf:
                      - example: 'Project not found'
                      - example: 'Role not found in this project'
                  statusCode:
                    type: integer
                    example: 404
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Inscription avec email/mot de passe
      operationId: signupEmailPassword
      description: |
        Inscription traditionnelle avec email, username et mot de passe.
        Accepte √† la fois un email ET un username pour une flexibilit√© maximale.

        **Validation :**
        - Le champ "email" accepte un username OU un email valide
        - Le champ "actualEmail" doit √™tre un email valide
        - Le mot de passe suit les r√®gles de s√©curit√© standard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formFields:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        enum: [email, actualEmail, password]
                      value:
                        type: string
                  example:
                    - id: email
                      value: johndoe
                    - id: actualEmail
                      value: john@example.com
                    - id: password
                      value: mySecurePassword123
              required:
                - formFields
      responses:
        '200':
          description: Inscription r√©ussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  user:
                    type: object
                    properties:
                      id:
                        type: string
        '400':
          description: Erreur de validation ou utilisateur existant
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: GENERAL_ERROR
                  message:
                    type: string
                    description: Message d'erreur sp√©cifique de SuperTokens
                    oneOf:
                      - example: 'La cr√©ation du compte a √©chou√©. Veuillez r√©essayer.'
                      - example: 'Please provide a string input.'
  /auth/signin:
    post:
      tags:
        - Authentication
      summary: Connexion avec email/mot de passe
      operationId: signinEmailPassword
      description: |
        Connexion avec email/username et mot de passe.
        Accepte √† la fois l'email ET le username comme identifiant.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formFields:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        enum: [email, password]
                      value:
                        type: string
                  example:
                    - id: email
                      value: john@example.com
                    - id: password
                      value: myPassword123
              required:
                - formFields
      responses:
        '200':
          description: Connexion r√©ussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  user:
                    type: object
                    properties:
                      id:
                        type: string
        '400':
          description: Identifiants incorrects
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: GENERAL_ERROR
                  message:
                    type: string
                    example: Identifiants incorrects.
  /auth/authorize/github:
    get:
      tags:
        - Authentication
      summary: Initier l'authentification GitHub OAuth
      operationId: authorizeGithub
      description: |
        üîó **Route principale pour d√©marrer l'authentification GitHub**

        Redirige automatiquement vers GitHub pour l'authentification OAuth.
        Cette route est utilis√©e par le frontend pour commencer le processus d'authentification.

        **Permissions GitHub demand√©es :**
        - `read:user` : Lire les informations de profil
        - `user:email` : Acc√©der √† l'email
        - `repo` : Acc√®s aux repositories (pour les futures fonctionnalit√©s)
        - `write:repo_hook` & `admin:repo_hook` : Gestion des webhooks

        **Flow automatique :**
        1. L'utilisateur clique sur "Se connecter avec GitHub"
        2. Redirection vers cette route
        3. Redirection automatique vers GitHub
        4. Callback vers `/auth/callback/github`
      responses:
        '302':
          description: Redirection vers GitHub pour l'authentification
          headers:
            Location:
              description: URL GitHub OAuth avec les param√®tres appropri√©s
              schema:
                type: string
                example: https://github.com/login/oauth/authorize?client_id=...
        '500':
          description: Erreur serveur lors de l'initialisation OAuth
  /auth/callback/github:
    get:
      tags:
        - Authentication
      summary: Callback GitHub apr√®s authentification OAuth
      operationId: callbackGithub
      description: |
        üîÑ **Route de callback automatique GitHub**

        URL de callback utilis√©e par GitHub apr√®s l'authentification.
        Cette route est automatiquement appel√©e par GitHub et NE DOIT PAS √™tre appel√©e manuellement.

        **Processus automatique :**
        - √âchange du code d'autorisation contre un token d'acc√®s
        - R√©cup√©ration des informations utilisateur GitHub
        - Cr√©ation/mise √† jour de l'utilisateur en base de donn√©es
        - G√©n√©ration et d√©finition des cookies de session
        - Redirection vers l'application frontend

        **Donn√©es GitHub synchronis√©es :**
        - Informations de profil (nom, avatar, bio)
        - Token d'acc√®s GitHub (pour futures int√©grations)
        - Email principal GitHub
      parameters:
        - name: code
          in: query
          description: Code d'autorisation fourni par GitHub OAuth
          required: true
          schema:
            type: string
            example: 1234567890abcdef
        - name: state
          in: query
          description: Param√®tre d'√©tat pour la s√©curit√© CSRF
          required: false
          schema:
            type: string
      responses:
        '302':
          description: Redirection vers l'application apr√®s connexion r√©ussie
          headers:
            Location:
              description: URL de redirection vers le frontend
              schema:
                type: string
                example: http://localhost:3000/
            Set-Cookie:
              description: Cookies de session SuperTokens
              schema:
                type: array
                items:
                  type: string
                example:
                  - sAccessToken=...; HttpOnly; Secure; SameSite=Lax
                  - sRefreshToken=...; HttpOnly; Secure; SameSite=Lax
        '400':
          description: Erreur lors du processus OAuth GitHub
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Erreur SuperTokens lors du callback GitHub
                  status:
                    type: string
                    example: 'NO_EMAIL_GIVEN_BY_PROVIDER'
        '500':
          description: Erreur serveur lors du traitement GitHub
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Missing user info during authentication'
  /auth/session:
    get:
      tags:
        - Authentication
      summary: R√©cup√©rer les informations de session (√©quivalent /me)
      operationId: getSession
      description: |
        Retourne les informations de l'utilisateur connect√©.
        Fonctionne comme un endpoint /me dans d'autres APIs.
        Utilise les cookies de session pour l'authentification.
      security:
        - supertokens_session: []
      responses:
        '200':
          description: Informations de session et utilisateur
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
                  session:
                    type: object
                    properties:
                      handle:
                        type: string
                        description: Identifiant unique de la session
                      userId:
                        type: string
                        description: ID utilisateur
                      accessTokenPayload:
                        type: object
                        description: Payload du token d'acc√®s
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID utilisateur
                        example: 'github_123456789'
                      email:
                        type: string
                        description: Email GitHub de l'utilisateur
                        example: 'user@example.com'
                      github:
                        type: object
                        properties:
                          login:
                            type: string
                            description: Nom d'utilisateur GitHub
                            example: 'johndoe'
                          name:
                            type: string
                            description: Nom complet
                            example: 'John Doe'
                          avatar_url:
                            type: string
                            description: URL de l'avatar GitHub
                            example: 'https://avatars.githubusercontent.com/u/123456789'
                          html_url:
                            type: string
                            description: URL du profil GitHub
                            example: 'https://github.com/johndoe'
        '401':
          description: Non authentifi√© - session invalide ou expir√©e
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'unauthorised'
  /auth/signout:
    post:
      tags:
        - Authentication
      summary: üö™ D√©connexion de l'utilisateur
      operationId: signout
      description: |
        Termine la session utilisateur et supprime les cookies d'authentification.

        **Actions effectu√©es :**
        - R√©vocation de la session SuperTokens
        - Suppression des cookies `sAccessToken` et `sRefreshToken`
        - Invalidation c√¥t√© serveur et client
      security:
        - supertokens_session: []
      responses:
        '200':
          description: D√©connexion r√©ussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
          headers:
            Set-Cookie:
              description: Suppression des cookies de session
              schema:
                type: array
                items:
                  type: string
                example:
                  - sAccessToken=; HttpOnly; Secure; SameSite=Lax; Expires=Thu, 01 Jan 1970 00:00:00 GMT
                  - sRefreshToken=; HttpOnly; Secure; SameSite=Lax; Expires=Thu, 01 Jan 1970 00:00:00 GMT
        '401':
          description: Utilisateur non connect√© - aucune session active
  /auth/session/refresh:
    post:
      tags:
        - Authentication
      summary: üîÑ Renouveler la session utilisateur
      operationId: refreshSession
      description: |
        Renouvelle automatiquement la session utilisateur avec le refresh token.

        **Utilisation automatique :**
        - Appel√© automatiquement par le SDK SuperTokens
        - Utilise le cookie `sRefreshToken` pour g√©n√©rer un nouveau `sAccessToken`
        - Transparent pour l'utilisateur final

        **Note :** Cette route est g√©n√©ralement appel√©e automatiquement par le SDK, 
        pas directement par l'application frontend.
      security:
        - supertokens_refresh: []
      responses:
        '200':
          description: Session renouvel√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
          headers:
            Set-Cookie:
              description: Nouveaux cookies de session
              schema:
                type: array
                items:
                  type: string
                example:
                  - sAccessToken=newToken...; HttpOnly; Secure; SameSite=Lax
        '401':
          description: Token de rafra√Æchissement invalide ou expir√©
  /auth/session/verify:
    get:
      tags:
        - Authentication
      summary: ‚úÖ V√©rifier la validit√© de la session
      operationId: verifySession
      description: |
        V√©rifie si la session actuelle est valide sans retourner les donn√©es utilisateur.

        **Cas d'usage :**
        - V√©rification rapide de l'√©tat de connexion
        - Middleware de protection des routes
        - Checks de s√©curit√© avant actions sensibles

        **Diff√©rence avec `/auth/session` :**
        - `/auth/session/verify` : V√©rification seule (l√©ger)
        - `/auth/session` : V√©rification + donn√©es utilisateur (complet)
      security:
        - supertokens_session: []
      responses:
        '200':
          description: Session valide
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
        '401':
          description: Session invalide ou expir√©e
  /auth/user/password/reset:
    post:
      tags:
        - Authentication
      summary: üîë Demander une r√©initialisation de mot de passe
      operationId: resetPasswordRequest
      description: |
        Initie le processus de r√©initialisation de mot de passe par email.

        **Processus :**
        1. Validation de l'email/username fourni
        2. G√©n√©ration d'un token de r√©initialisation
        3. Envoi d'un email avec le lien de r√©initialisation

        **S√©curit√© :** 
        - Aucune information n'est r√©v√©l√©e sur l'existence ou non du compte
        - Token √† usage unique avec expiration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formFields:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        enum: [email]
                      value:
                        type: string
                  example:
                    - id: email
                      value: john@example.com
              required:
                - formFields
      responses:
        '200':
          description: Email de r√©initialisation envoy√© (ou pas, pour la s√©curit√©)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
        '400':
          description: Erreur dans la demande de r√©initialisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'GENERAL_ERROR'
                  message:
                    type: string
                    description: Message d'erreur de SuperTokens
  /auth/user/password/reset/token:
    post:
      tags:
        - Authentication
      summary: üîí Confirmer la r√©initialisation de mot de passe
      operationId: confirmPasswordReset
      description: |
        Finalise la r√©initialisation avec le token re√ßu par email.

        **Utilisation :**
        - Appel√©e depuis le lien dans l'email de r√©initialisation
        - Le token est g√©n√©ralement dans l'URL du lien
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  example: token
                token:
                  type: string
                  description: Token de r√©initialisation re√ßu par email
                formFields:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        enum: [password]
                      value:
                        type: string
                  example:
                    - id: password
                      value: newSecurePassword123
              required:
                - method
                - token
                - formFields
      responses:
        '200':
          description: Mot de passe r√©initialis√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
        '400':
          description: Token invalide ou erreur de validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'GENERAL_ERROR'
                  message:
                    type: string
                    description: Message d'erreur SuperTokens pour token invalide ou mot de passe incorrect
components:
  schemas:
    ProjectRoleResponseDto:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique du r√¥le
          example: '789e4567-e89b-12d3-a456-426614174111'
        projectId:
          type: string
          description: Identifiant du projet auquel appartient le r√¥le
          example: '123e4567-e89b-12d3-a456-426614174000'
        roleTitle:
          type: string
          description: Titre du r√¥le
          example: 'Frontend Developer'
        description:
          type: string
          description: Description d√©taill√©e du r√¥le
          example: 'D√©veloppeur React exp√©riment√© avec expertise en TypeScript'
        isFilled:
          type: boolean
          description: Indique si le r√¥le est pourvu
          example: false
        skillSet:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Comp√©tences techniques requises pour ce r√¥le

    CreateProjectRoleDto:
      type: object
      properties:
        roleTitle:
          type: string
          description: Titre du r√¥le
          example: 'Frontend Developer'
        description:
          type: string
          description: Description du r√¥le
          example: 'D√©veloppeur React exp√©riment√©'
        isFilled:
          type: boolean
          description: Indique si le r√¥le est d√©j√† pourvu
          example: false
        skillSet:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Comp√©tences techniques requises
      required:
        - roleTitle
        - description
        - isFilled
        - skillSet

    UpdateProjectRoleDto:
      type: object
      properties:
        roleTitle:
          type: string
          description: Nouveau titre du r√¥le
          example: 'Senior Frontend Developer'
        description:
          type: string
          description: Nouvelle description du r√¥le
          example: 'D√©veloppeur React exp√©riment√© avec expertise en TypeScript'
        isFilled:
          type: boolean
          description: √âtat du r√¥le (pourvu ou non)
          example: true
        skillSet:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Comp√©tences techniques requises pour ce r√¥le

    TechStackDto:
      type: object
      properties:
        id:
          type: string
          description: ID de la stack technique
          example: 'typescript'
        name:
          type: string
          description: Nom de la stack technique
          example: 'TypeScript'
        iconUrl:
          type: string
          description: URL de l'ic√¥ne de la stack technique
          example: 'https://cdn.worldvectorlogo.com/logos/typescript.svg'
      required:
        - id
        - name
        - iconUrl
    ProjectResponseDto:
      type: object
      properties:
        id:
          type: string
          description: ID unique du projet
          example: '123e4567-e89b-12d3-a456-426614174000'
        title:
          type: string
          description: Titre du projet
          example: 'Plateforme E-commerce React'
        description:
          type: string
          description: Description d√©taill√©e du projet
          example: 'Application e-commerce moderne avec React et Node.js'
        difficulty:
          type: string
          enum: [EASY, MEDIUM, HARD]
          description: Niveau de difficult√© du projet
          example: 'MEDIUM'
        link:
          type: string
          description: Lien vers le site web ou d√©mo du projet
          nullable: true
          example: 'https://my-ecommerce-demo.com'
        githubLink:
          type: string
          description: Lien vers le d√©p√¥t GitHub du projet
          nullable: true
          example: 'https://github.com/user/ecommerce-platform'
        ownerId:
          type: string
          description: ID de l'utilisateur propri√©taire du projet
          example: 'github_user123'
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation du projet
          example: '2024-01-15T10:30:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
          example: '2024-01-20T14:45:00.000Z'
        techStacks:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Technologies utilis√©es dans le projet
        projectRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRoleDto'
          description: R√¥les recherch√©s pour le projet
        projectMembers:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMemberDto'
          description: Membres actuels du projet
        owner:
          $ref: '#/components/schemas/GitHubUser'
          description: Informations du propri√©taire du projet
      required:
        - id
        - title
        - description
        - difficulty
        - ownerId
        - createdAt
        - updatedAt
        - techStacks
        - projectRoles
        - projectMembers
    CreateProjectDtoInput:
      type: object
      properties:
        title:
          type: string
          description: Titre du projet
          minLength: 1
          maxLength: 100
          example: 'Mon Super Projet Open Source'
        description:
          type: string
          description: Description d√©taill√©e du projet
          minLength: 10
          maxLength: 1000
          example: 'Ce projet vise √† cr√©er une plateforme pour les d√©veloppeurs open source.'
        difficulty:
          type: string
          enum: [EASY, MEDIUM, HARD]
          description: Niveau de difficult√© du projet
          example: 'MEDIUM'
        link:
          type: string
          description: Lien vers le site web ou d√©mo du projet
          nullable: true
          example: 'https://my-project-demo.com'
        githubLink:
          type: string
          description: Lien vers le d√©p√¥t GitHub du projet
          nullable: true
          pattern: '^https://github\.com/.+/.+$'
          example: 'https://github.com/user/my-project'
        techStacks:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Liste des technologies utilis√©es dans le projet
          minItems: 1
          maxItems: 10
        projectRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRoleDto'
          description: R√¥les recherch√©s pour le projet
          minItems: 1
          maxItems: 5
        projectMembers:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMemberDto'
          description: Membres actuels du projet (g√©n√©ralement vide √† la cr√©ation)
          default: []
      required:
        - title
        - description
        - difficulty
        - techStacks
        - projectRoles
    UpdateProjectDtoRequest:
      type: object
      properties:
        title:
          type: string
          description: Nouveau titre du projet
          example: 'Mon Super Projet Open Source (Mis √† jour)'
        description:
          type: string
          description: Nouvelle description du projet
          example: 'Description mise √† jour du projet open source.'
        link:
          type: string
          description: Nouveau lien vers le d√©p√¥t ou le site du projet
          nullable: true
          example: 'https://github.com/user/my-updated-project'
        status:
          type: string
          description: Nouveau statut du projet
          example: 'Completed'
        techStacks:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Liste mise √† jour des stacks techniques utilis√©es dans le projet
      required:
        - title
        - description
        - status
        - techStacks

    SessionInfo:
      type: object
      properties:
        status:
          type: string
          example: 'OK'
        session:
          type: object
          properties:
            handle:
              type: string
              description: Identifiant unique de la session
            userId:
              type: string
              description: ID utilisateur
            accessTokenPayload:
              type: object
              description: Payload du token d'acc√®s
        user:
          $ref: '#/components/schemas/GitHubUser'
    GitHubUser:
      type: object
      properties:
        id:
          type: string
          description: ID utilisateur unique
          example: 'github_123456789'
        email:
          type: string
          description: Email de l'utilisateur GitHub
          example: 'developer@example.com'
        github:
          type: object
          properties:
            login:
              type: string
              description: Nom d'utilisateur GitHub
              example: 'johndoe'
            name:
              type: string
              description: Nom complet de l'utilisateur
              example: 'John Doe'
            avatar_url:
              type: string
              description: URL de l'avatar GitHub
              example: 'https://avatars.githubusercontent.com/u/123456789'
            html_url:
              type: string
              description: URL du profil GitHub public
              example: 'https://github.com/johndoe'
            bio:
              type: string
              description: Biographie GitHub de l'utilisateur
              example: 'Full-stack developer passionate about open source'
            public_repos:
              type: integer
              description: Nombre de repositories publics
              example: 42
            followers:
              type: integer
              description: Nombre d'abonn√©s
              example: 150
            following:
              type: integer
              description: Nombre de personnes suivies
              example: 75
    ProjectRoleDto:
      type: object
      properties:
        roleTitle:
          type: string
          description: Titre du r√¥le recherch√©
          example: 'Frontend Developer'
        description:
          type: string
          description: Description d√©taill√©e du r√¥le
          example: "D√©veloppeur React exp√©riment√© pour l'interface utilisateur"
        skillSet:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Comp√©tences techniques requises pour ce r√¥le
        isFilled:
          type: boolean
          description: Indique si le r√¥le est d√©j√† pourvu
          default: false
      required:
        - roleTitle
        - description
        - skillSet
        - isFilled
    ProjectMemberDto:
      type: object
      properties:
        userId:
          type: string
          description: ID de l'utilisateur membre du projet
          example: 'github_123456789'
        role:
          type: string
          description: R√¥le de l'utilisateur dans le projet
          example: 'Frontend Developer'
        joinedAt:
          type: string
          format: date-time
          description: Date d'ajout au projet
          example: '2024-01-15T10:30:00.000Z'
        user:
          $ref: '#/components/schemas/GitHubUser'
      required:
        - userId
        - role
        - joinedAt
    UserResponseDto:
      type: object
      properties:
        id:
          type: string
          description: ID utilisateur unique
          example: '43a39f90-1718-470d-bcef-c7ebeb972c0d'
        username:
          type: string
          description: Nom d'utilisateur
          example: 'Lhourquin'
        email:
          type: string
          description: Email de l'utilisateur
          example: 'lhourquin@gmail.com'
        avatarUrl:
          type: string
          description: URL de l'avatar utilisateur
          example: 'https://avatars.githubusercontent.com/u/45101981?v=4'
        bio:
          type: string
          description: Biographie de l'utilisateur
          example: "Fullstack Developer | \r\nNestJS & Angular lover | \r\nBuilding @opensource-together "
        githubUrl:
          type: string
          description: URL du profil GitHub
          example: 'https://github.com/Lhourquin'
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation du compte
          example: '2025-06-16T19:57:31.633Z'
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
          example: '2025-06-16T19:57:31.633Z'
      required:
        - id
        - username
        - email
        - avatarUrl
        - bio
        - githubUrl
        - createdAt
        - updatedAt
  securitySchemes:
    supertokens_session:
      type: apiKey
      in: cookie
      name: sAccessToken
      description: |
        Jeton de session SuperTokens pour l'authentification.
        Automatiquement g√©r√© par le navigateur via cookies HttpOnly.

        **Cookies utilis√©s :**
        - `sAccessToken` : Token d'acc√®s principal
        - `sRefreshToken` : Token de rafra√Æchissement (optionnel selon la route)
    supertokens_refresh:
      type: apiKey
      in: cookie
      name: sRefreshToken
      description: |
        Jeton de rafra√Æchissement SuperTokens pour renouveler les sessions.
        Utilis√© automatiquement par `/auth/session/refresh`.
