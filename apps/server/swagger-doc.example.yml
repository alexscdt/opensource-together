openapi: 3.0.4
info:
  title: OpenSource Together API
  description: |
    Documentation de l'API pour la plateforme OpenSource Together.
    
    ## Authentification
    
    L'API utilise SuperTokens avec l'authentification GitHub OAuth.
    

    TEST TEST TEST
    ### Pour les d√©veloppeurs Frontend
    
    **Processus de connexion :**
    1. Rediriger vers `/auth/authorize/github` pour initier la connexion
    2. L'utilisateur est redirig√© vers GitHub pour autoriser l'application
    3. GitHub redirige vers `/auth/callback/github` avec le code d'autorisation
    4. Les cookies de session sont automatiquement d√©finis
    5. Utiliser `/auth/session` pour r√©cup√©rer les infos utilisateur (√©quivalent `/me`)
    
    **Cookies de session :**
    - `sAccessToken` : Token d'acc√®s principal
    - `sRefreshToken` : Token de rafra√Æchissement
    - Ces cookies sont automatiquement g√©r√©s par le navigateur
    
    **Routes prot√©g√©es :**
    Les routes n√©cessitant une authentification sont marqu√©es avec le symbole üîí.
    
    **Base URL :** `http://localhost:4000`
  version: 1.0.0
servers:
  - url: http://localhost:4000
tags:
  - name: Projects
    description: Op√©rations li√©es aux projets open source
  - name: Authentication
    description: Op√©rations li√©es √† l'authentification utilisateur
paths:
  /projects:
    get:
      tags:
        - Projects
      summary: R√©cup√©rer tous les projets
      operationId: getProjects
      description: |
        R√©cup√®re la liste compl√®te de tous les projets disponibles sur la plateforme.
        Aucune authentification requise - endpoint public.
      responses:
        '200':
          description: Liste de tous les projets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponseDto'
              example:
                - id: '123e4567-e89b-12d3-a456-426614174000'
                  title: 'Plateforme E-commerce React'
                  description: 'Une application e-commerce moderne construite avec React et Node.js'
                  link: 'https://github.com/user/ecommerce-platform'
                  ownerId: 'github_user123'
                  techStacks:
                    - id: 'react'
                      name: 'React'
                      iconUrl: 'https://reactjs.org/logo.svg'
                    - id: 'nodejs'
                      name: 'Node.js'
                      iconUrl: 'https://nodejs.org/logo.svg'
        '500':
          description: Erreur serveur lors de la r√©cup√©ration des projets
    post:
      tags:
        - Projects
      summary: Cr√©er un nouveau projet
      operationId: createProject
      description: |
        Cr√©e un nouveau projet sur la plateforme.
        N√©cessite une authentification GitHub valide.
        L'utilisateur connect√© devient automatiquement le propri√©taire du projet.
      security:
        - supertokens_session: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectDtoInput'
            example:
              title: 'Mon Nouveau Projet Open Source'
              description: 'Description d√©taill√©e de mon projet innovant'
              difficulty: 'MEDIUM'
              link: 'https://example.com/my-project'
              githubLink: 'https://github.com/user/my-project'
              techStacks:
                - id: 'react'
                - id: 'typescript'
              projectRoles:
                - roleTitle: 'Frontend Developer'
                  description: 'D√©veloppeur React exp√©riment√©'
                  skillSet:
                    - id: 'react'
                  isFilled: false
              projectMembers: [
                {
                  "userId": "9b4d1ac3-a5ca-4d97-988f-3924e52314e7",
                },
                {
                  "userId": "9b4d1ac3-a5ca-4d97-988f-3924e52314e7",
                }
              ]
      responses:
        '200':
          description: Projet cr√©√© avec succ√®s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '400':
          description: Donn√©es d'entr√©e invalides ou erreur de validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Title is required'
                  statusCode:
                    type: integer
                    example: 400
        '401':
          description: Non authentifi√© - session requise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /projects/search:
    get:
      tags:
        - Projects
      summary: Rechercher des projets avec filtres multiples
      operationId: getProjectsFiltered
      description: |
        Recherche de projets avec filtres optionnels combinables :
        - Par titre (recherche insensible √† la casse)
        - Par difficult√© (EASY, MEDIUM, HARD)
        - Par r√¥les recherch√©s (frontend, backend, designer, etc.)
        - Par technologies utilis√©es (React, Vue, TypeScript, etc.)
        - Tri par date de cr√©ation
      parameters:
        - name: title
          in: query
          description: Titre du projet √† rechercher (recherche partielle)
          required: false
          schema:
            type: string
          example: 'React'
        - name: difficulty
          in: query
          description: Niveau de difficult√© du projet
          required: false
          schema:
            type: string
            enum: [EASY, MEDIUM, HARD]
          example: 'EASY'
        - name: roles
          in: query
          description: R√¥les recherch√©s dans le projet (s√©par√©s par des virgules)
          required: false
          schema:
            type: string
          example: 'frontend,backend'
        - name: techStacks
          in: query
          description: Technologies utilis√©es dans le projet (s√©par√©es par des virgules)
          required: false
          schema:
            type: string
          example: 'react,typescript,nodejs'
        - name: sortOrder
          in: query
          description: Ordre de tri par date de cr√©ation
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          example: 'desc'
      responses:
        '200':
          description: Liste de projets correspondant aux crit√®res de filtrage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponseDto'
              examples:
                with_results:
                  summary: R√©sultats trouv√©s
                  value:
                    - id: '123e4567-e89b-12d3-a456-426614174000'
                      title: 'Plateforme React E-commerce'
                      description: 'Application e-commerce moderne avec React et TypeScript'
                      difficulty: 'MEDIUM'
                      link: 'https://github.com/user/react-ecommerce'
                      ownerId: 'user123'
                      techStacks:
                        - id: 'react'
                          name: 'React'
                          iconUrl: 'https://reactjs.org/logo.svg'
                        - id: 'typescript'
                          name: 'TypeScript'
                          iconUrl: 'https://www.typescriptlang.org/logo.png'
                empty_results:
                  summary: Aucun r√©sultat
                  value: []
        '400':
          description: Erreur de validation des param√®tres de recherche
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    oneOf:
                      - type: string
                        example: 'difficulty must be a valid difficulty : EASY, MEDIUM, HARD'
                      - type: string
                        example: 'sortOrder must be either asc or desc'
                      - type: string
                        example: 'roles must be valid role names'
                  statusCode:
                    type: integer
                    example: 400
        '500':
          description: Erreur serveur lors de la recherche
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
                  statusCode:
                    type: integer
                    example: 500
  /projects/{id}:
    get:
      tags:
        - Projects
      summary: R√©cup√©rer un projet par ID
      operationId: getProjectById
      parameters:
        - name: id
          in: path
          description: ID du projet √† r√©cup√©rer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: D√©tails du projet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '404':
          description: Projet non trouv√©
    patch:
      tags:
        - Projects
      summary: Mettre √† jour un projet existant
      operationId: updateProject
      security:
        - supertokens_session: []
      parameters:
        - name: id
          in: path
          description: ID du projet √† mettre √† jour
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDtoRequest'
      responses:
        '200':
          description: Projet mis √† jour avec succ√®s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '400':
          description: Donn√©es d'entr√©e invalides ou utilisateur non autoris√©
        '401':
          description: Non authentifi√©
        '404':
          description: Projet non trouv√©
  /auth/authorize/github:
    get:
      tags:
        - Authentication
      summary: Initier l'authentification GitHub
      operationId: authorizeGithub
      description: |
        Redirige vers GitHub pour l'authentification OAuth.
        Cette route est utilis√©e pour commencer le processus d'authentification GitHub.
        L'utilisateur sera redirig√© vers GitHub, puis de retour vers la callback URL apr√®s autorisation.
      responses:
        '302':
          description: Redirection vers GitHub pour l'authentification
        '500':
          description: Erreur serveur lors de l'initialisation de l'authentification
  /auth/callback/github:
    get:
      tags:
        - Authentication
      summary: Callback GitHub apr√®s authentification
      operationId: callbackGithub
      description: |
        URL de callback utilis√©e par GitHub apr√®s l'authentification.
        Cette route est automatiquement appel√©e par GitHub et g√®re :
        - L'√©change du code d'autorisation contre un token d'acc√®s
        - La cr√©ation/mise √† jour de l'utilisateur en base
        - L'√©tablissement de la session utilisateur
      parameters:
        - name: code
          in: query
          description: Code d'autorisation fourni par GitHub
          required: true
          schema:
            type: string
        - name: state
          in: query
          description: Param√®tre d'√©tat pour la s√©curit√©
          required: false
          schema:
            type: string
      responses:
        '302':
          description: Redirection vers l'application apr√®s connexion r√©ussie
        '400':
          description: Code d'autorisation invalide ou manquant
        '500':
          description: Erreur lors de l'authentification
  /auth/session:
    get:
      tags:
        - Authentication
      summary: R√©cup√©rer les informations de session (√©quivalent /me)
      operationId: getSession
      description: |
        Retourne les informations de l'utilisateur connect√©.
        Fonctionne comme un endpoint /me dans d'autres APIs.
        Utilise les cookies de session pour l'authentification.
      security:
        - supertokens_session: []
      responses:
        '200':
          description: Informations de session et utilisateur
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
                  session:
                    type: object
                    properties:
                      handle:
                        type: string
                        description: Identifiant unique de la session
                      userId:
                        type: string
                        description: ID utilisateur
                      accessTokenPayload:
                        type: object
                        description: Payload du token d'acc√®s
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID utilisateur
                        example: 'github_123456789'
                      email:
                        type: string
                        description: Email GitHub de l'utilisateur
                        example: 'user@example.com'
                      github:
                        type: object
                        properties:
                          login:
                            type: string
                            description: Nom d'utilisateur GitHub
                            example: 'johndoe'
                          name:
                            type: string
                            description: Nom complet
                            example: 'John Doe'
                          avatar_url:
                            type: string
                            description: URL de l'avatar GitHub
                            example: 'https://avatars.githubusercontent.com/u/123456789'
                          html_url:
                            type: string
                            description: URL du profil GitHub
                            example: 'https://github.com/johndoe'
        '401':
          description: Non authentifi√© - session invalide ou expir√©e
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'unauthorised'
  /auth/signout:
    post:
      tags:
        - Authentication
      summary: D√©connexion de l'utilisateur
      operationId: signout
      description: |
        Termine la session utilisateur et supprime les cookies d'authentification.
      security:
        - supertokens_session: []
      responses:
        '200':
          description: D√©connexion r√©ussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
        '401':
          description: Utilisateur non connect√©
components:
  schemas:
    TechStackDto:
      type: object
      properties:
        id:
          type: string
          description: ID de la stack technique
          example: 'typescript'
        name:
          type: string
          description: Nom de la stack technique
          example: 'TypeScript'
        iconUrl:
          type: string
          description: URL de l'ic√¥ne de la stack technique
          example: 'https://cdn.worldvectorlogo.com/logos/typescript.svg'
      required:
        - id
        - name
        - iconUrl
    ProjectResponseDto:
      type: object
      properties:
        id:
          type: string
          description: ID unique du projet
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          description: Titre du projet
          example: "Plateforme E-commerce React"
        description:
          type: string
          description: Description d√©taill√©e du projet
          example: "Application e-commerce moderne avec React et Node.js"
        difficulty:
          type: string
          enum: [EASY, MEDIUM, HARD]
          description: Niveau de difficult√© du projet
          example: "MEDIUM"
        link:
          type: string
          description: Lien vers le site web ou d√©mo du projet
          nullable: true
          example: "https://my-ecommerce-demo.com"
        githubLink:
          type: string
          description: Lien vers le d√©p√¥t GitHub du projet
          nullable: true
          example: "https://github.com/user/ecommerce-platform"
        ownerId:
          type: string
          description: ID de l'utilisateur propri√©taire du projet
          example: "github_user123"
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation du projet
          example: "2024-01-15T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
          example: "2024-01-20T14:45:00.000Z"
        techStacks:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Technologies utilis√©es dans le projet
        projectRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRoleDto'
          description: R√¥les recherch√©s pour le projet
        projectMembers:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMemberDto'
          description: Membres actuels du projet
        owner:
          $ref: '#/components/schemas/GitHubUser'
          description: Informations du propri√©taire du projet
      required:
        - id
        - title
        - description
        - difficulty
        - ownerId
        - createdAt
        - updatedAt
        - techStacks
        - projectRoles
        - projectMembers
    CreateProjectDtoInput:
      type: object
      properties:
        title:
          type: string
          description: Titre du projet
          minLength: 1
          maxLength: 100
          example: 'Mon Super Projet Open Source'
        description:
          type: string
          description: Description d√©taill√©e du projet
          minLength: 10
          maxLength: 1000
          example: 'Ce projet vise √† cr√©er une plateforme pour les d√©veloppeurs open source.'
        difficulty:
          type: string
          enum: [EASY, MEDIUM, HARD]
          description: Niveau de difficult√© du projet
          example: 'MEDIUM'
        link:
          type: string
          description: Lien vers le site web ou d√©mo du projet
          nullable: true
          example: 'https://my-project-demo.com'
        githubLink:
          type: string
          description: Lien vers le d√©p√¥t GitHub du projet
          nullable: true
          pattern: '^https://github\.com/.+/.+$'
          example: 'https://github.com/user/my-project'
        techStacks:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Liste des technologies utilis√©es dans le projet
          minItems: 1
          maxItems: 10
        projectRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRoleDto'
          description: R√¥les recherch√©s pour le projet
          minItems: 1
          maxItems: 5
        projectMembers:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMemberDto'
          description: Membres actuels du projet (g√©n√©ralement vide √† la cr√©ation)
          default: []
      required:
        - title
        - description
        - difficulty
        - techStacks
        - projectRoles
    UpdateProjectDtoRequest:
      type: object
      properties:
        title:
          type: string
          description: Nouveau titre du projet
          example: 'Mon Super Projet Open Source (Mis √† jour)'
        description:
          type: string
          description: Nouvelle description du projet
          example: 'Description mise √† jour du projet open source.'
        link:
          type: string
          description: Nouveau lien vers le d√©p√¥t ou le site du projet
          nullable: true
          example: 'https://github.com/user/my-updated-project'
        status:
          type: string
          description: Nouveau statut du projet
          example: 'Completed'
        techStacks:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Liste mise √† jour des stacks techniques utilis√©es dans le projet
      required:
        - title
        - description
        - status
        - techStacks
    AuthError:
      type: object
      properties:
        message:
          type: string
          description: Message d'erreur d'authentification
          example: 'unauthorised'
        statusCode:
          type: integer
          description: Code de statut HTTP
          example: 401
    SessionInfo:
      type: object
      properties:
        status:
          type: string
          example: 'OK'
        session:
          type: object
          properties:
            handle:
              type: string
              description: Identifiant unique de la session
            userId:
              type: string
              description: ID utilisateur
            accessTokenPayload:
              type: object
              description: Payload du token d'acc√®s
        user:
          $ref: '#/components/schemas/GitHubUser'
    GitHubUser:
      type: object
      properties:
        id:
          type: string
          description: ID utilisateur unique
          example: 'github_123456789'
        email:
          type: string
          description: Email de l'utilisateur GitHub
          example: 'developer@example.com'
        github:
          type: object
          properties:
            login:
              type: string
              description: Nom d'utilisateur GitHub
              example: 'johndoe'
            name:
              type: string
              description: Nom complet de l'utilisateur
              example: 'John Doe'
            avatar_url:
              type: string
              description: URL de l'avatar GitHub
              example: 'https://avatars.githubusercontent.com/u/123456789'
            html_url:
              type: string
              description: URL du profil GitHub public
              example: 'https://github.com/johndoe'
            bio:
              type: string
              description: Biographie GitHub de l'utilisateur
              example: 'Full-stack developer passionate about open source'
            public_repos:
              type: integer
              description: Nombre de repositories publics
              example: 42
            followers:
              type: integer
              description: Nombre d'abonn√©s
              example: 150
              following:
              type: integer
              description: Nombre de personnes suivies
              example: 75
    ProjectRoleDto:
      type: object
      properties:
        roleTitle:
          type: string
          description: Titre du r√¥le recherch√©
          example: "Frontend Developer"
        description:
          type: string
          description: Description d√©taill√©e du r√¥le
          example: "D√©veloppeur React exp√©riment√© pour l'interface utilisateur"
        skillSet:
          type: array
          items:
            $ref: '#/components/schemas/TechStackDto'
          description: Comp√©tences techniques requises pour ce r√¥le
        isFilled:
          type: boolean
          description: Indique si le r√¥le est d√©j√† pourvu
          default: false
      required:
        - roleTitle
        - description
        - skillSet
        - isFilled
    ProjectMemberDto:
      type: object
      properties:
        userId:
          type: string
          description: ID de l'utilisateur membre du projet
          example: "github_123456789"
        role:
          type: string
          description: R√¥le de l'utilisateur dans le projet
          example: "Frontend Developer"
        joinedAt:
          type: string
          format: date-time
          description: Date d'ajout au projet
          example: "2024-01-15T10:30:00.000Z"
        user:
          $ref: '#/components/schemas/GitHubUser'
      required:
        - userId
        - role
        - joinedAt
  securitySchemes:
    supertokens_session:
      type: apiKey
      in: cookie
      name: sAccessToken
      description: Jeton de session SuperTokens (stock√© dans un cookie sAccessToken)
